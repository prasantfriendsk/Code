param(
    [Parameter(Mandatory=$true)]
    [string]$OrgId,             # Your Snyk Org ID

    [Parameter(Mandatory=$true)]
    [string]$ApiToken,          # Snyk API Token

    [Parameter(Mandatory=$true)]
    [string]$OutDir             # Output folder for CSV files
)

# Ensure output directory exists
if (-not (Test-Path $OutDir)) {
    New-Item -ItemType Directory -Path $OutDir | Out-Null
}

# Snyk Export API URL
$baseUrl = "https://api.snyk.io/rest/orgs/$OrgId/export"

# Headers
$headers = @{
    "Authorization" = "token $ApiToken"
    "Content-Type"  = "application/json"
}

Write-Host "Starting export for Org: $OrgId" -ForegroundColor Cyan

# Step 1: Create export job
$jobResponse = Invoke-RestMethod -Method POST -Uri $baseUrl -Headers $headers -Body "{}"
$jobId = $jobResponse.id

Write-Host "Export job created: $jobId" -ForegroundColor Green

# Step 2: Poll until job is finished
$jobStatus = "in_progress"
while ($jobStatus -eq "in_progress") {
    Start-Sleep -Seconds 10
    $statusResponse = Invoke-RestMethod -Method GET -Uri "$baseUrl/$jobId" -Headers $headers
    $jobStatus = $statusResponse.status
    Write-Host "Job status: $jobStatus" -ForegroundColor Yellow
}

if ($jobStatus -ne "complete") {
    Write-Host "Export failed with status: $jobStatus" -ForegroundColor Red
    exit 1
}

# Step 3: Download CSV files
foreach ($file in $statusResponse.data.files) {
    $fileName = Split-Path $file.url -Leaf
    $outputPath = Join-Path $OutDir $fileName
    Invoke-WebRequest -Uri $file.url -OutFile $outputPath
    Write-Host "Downloaded: $outputPath" -ForegroundColor Green
}

Write-Host "âœ… Export completed. Files saved to $OutDir" -ForegroundColor Cyan
