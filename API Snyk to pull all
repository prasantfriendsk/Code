# Set variables
$orgId = "<your_org_id>"  # ‚Üê Replace this
$headers = @{
    "Authorization" = "token $env:SNYK_TOKEN"
    "Content-Type"  = "application/json"
}
$apiVersion = "2024-03-19~beta"
$baseUrl = "https://api.snyk.io/rest"

# Output CSV path
$outputPath = ".\snyk_projects_report.csv"
$exportRows = @()

# Function to handle paginated requests
function Get-PaginatedData {
    param (
        [string]$url
    )
    $results = @()
    do {
        $response = Invoke-RestMethod -Uri $url -Headers $headers -Method Get
        $results += $response.data
        $url = $response.links.next.href
    } while ($url)
    return $results
}

# Get all projects with pagination
function Get-AllProjects {
    $url = "$baseUrl/orgs/$orgId/projects?version=$apiVersion"
    return Get-PaginatedData -url $url
}

# Get issues for a given project
function Get-ProjectIssues {
    param([string]$projectId)
    $url = "$baseUrl/orgs/$orgId/projects/$projectId/issues?version=$apiVersion"
    return Get-PaginatedData -url $url
}

# Get dependencies for a given project
function Get-ProjectDependencies {
    param([string]$projectId)
    $url = "$baseUrl/orgs/$orgId/projects/$projectId/dependencies?version=$apiVersion"
    return Get-PaginatedData -url $url
}

# Get all projects
$projects = Get-AllProjects
Write-Host "`nFound $($projects.Count) projects.`n" -ForegroundColor Cyan

foreach ($project in $projects) {
    $projectId = $project.id
    $projectName = $project.attributes.name
    Write-Host "üîç Project: $projectName"

    # Get dependencies
    $deps = Get-ProjectDependencies -projectId $projectId
    $dependencyCount = $deps.Count

    # Get issues
    $issues = Get-ProjectIssues -projectId $projectId
    if ($issues.Count -eq 0) {
        # If no issues, still export the project row
        $exportRows += [pscustomobject]@{
            ProjectName       = $projectName
            ProjectId         = $projectId
            IssueTitle        = ""
            IssueSeverity     = ""
            IssueType         = ""
            IssueIntroducedThrough = ""
            DependencyCount   = $dependencyCount
        }
    }
    foreach ($issue in $issues) {
        $exportRows += [pscustomobject]@{
            ProjectName       = $projectName
            ProjectId         = $projectId
            IssueTitle        = $issue.attributes.title
            IssueSeverity     = $issue.attributes.severity
            IssueType         = $issue.attributes.issueType
            IssueIntroducedThrough = ($issue.attributes.introducedThrough -join ", ")
            DependencyCount   = $dependencyCount
        }
    }
}

# Export to CSV
$exportRows | Export-Csv -Path $outputPath -NoTypeInformation -Encoding UTF8
Write-Host "`n‚úÖ Export complete: $outputPath`n" -ForegroundColor Green
