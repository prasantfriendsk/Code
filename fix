function Get-PaginatedData {
    param (
        [string]$url
    )

    $results = @()
    do {
        try {
            Write-Host "üì° Fetching: $url" -ForegroundColor Gray
            $response = Invoke-RestMethod -Uri $url -Headers $headers -Method Get
            $results += $response.data

            if ($response.PSObject.Properties['links'] -and $response.links.next.href) {
                $baseNextUrl = $response.links.next.href -replace '\?.*$', ''
                $url = "$baseNextUrl?version=$apiVersion&limit=$limit"
            } else {
                $url = $null
            }
        } catch {
            if ($_.Exception.Response.StatusCode.value__ -eq 404) {
                Write-Warning "‚ö†Ô∏è 404 Not Found - skipping this resource."
                return @()  # return empty and exit loop
            } else {
                Write-Warning "üî• Unexpected error calling: $url"
                Write-Warning $_.Exception.Message
                return @()
            }
        }
    } while ($url)

    return $results
}
