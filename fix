function Get-PaginatedData {
    param (
        [string]$initialUrl
    )

    $results = @()
    $url = $initialUrl
    $page = 1

    do {
        try {
            Write-Host "üì° Fetching page $page: $url" -ForegroundColor Gray
            $response = Invoke-RestMethod -Uri $url -Headers $headers -Method Get
            $results += $response.data
            $page++

            if ($response.PSObject.Properties['links'] -and $response.links.next.href) {
                $url = $response.links.next.href
            } elseif ($response.data.Count -eq $limit) {
                # Manual fallback to cursor pagination
                $lastId = $response.data[-1].id
                $baseUrlOnly = $initialUrl -replace '\?.*$', ''
                $url = "$baseUrlOnly?starting_after=$lastId&limit=$limit&version=$apiVersion"
            } else {
                $url = $null
            }

        } catch {
            if ($_.Exception.Response.StatusCode.value__ -eq 404) {
                Write-Warning "‚ö†Ô∏è 404 Not Found - skipping"
                return @()
            } else {
                Write-Warning "üî• Error calling: $url"
                Write-Warning $_.Exception.Message
                return @()
            }
        }
    } while ($url)

    return $results
}
